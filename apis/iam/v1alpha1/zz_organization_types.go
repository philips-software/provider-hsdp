/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type OrganizationInitParameters struct {

	// The description of the Org
	// The description of the organization.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The name of the organization suitable for display.
	// The display name to use for this organization.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Identifier defined by client which identifies the organization on the client side
	// An optional external identifier for this organization.
	ExternalID *string `json:"externalId,omitempty" tf:"external_id,omitempty"`

	// Marks the Org as a root organization (boolean)
	// Deprecated, do not use.
	IsRootOrg *bool `json:"isRootOrg,omitempty" tf:"is_root_org,omitempty"`

	// The name of the Org in IAM
	// The name of the IAM Organization.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The parent Org ID (GUID)
	// The parent organization ID.
	ParentOrgID *string `json:"parentOrgId,omitempty" tf:"parent_org_id,omitempty"`

	// The type of the organization e.g. Hospital
	// The organization type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Blocks until the organization delete has completed. Default: false.
	// The organization delete process can take some time as all its associated resources like
	// users, groups, roles etc. are removed recursively. This option is useful for ephemeral environments
	// where the same organization might be recreated shortly after a destroy operation.
	// Blocks until the organization delete has completed. Default: false. The organization delete process can take some time as all its associated resources like users, groups, roles etc. are removed recursively. This option is useful for ephemeral environments where the same organization might be recreated shortly after a destroy operation.
	WaitForDelete *bool `json:"waitForDelete,omitempty" tf:"wait_for_delete,omitempty"`
}

type OrganizationObservation struct {

	// Boolean. Weather the organization is active or not.
	// Weather the organization is active or not.
	Active *bool `json:"active,omitempty" tf:"active,omitempty"`

	// The description of the Org
	// The description of the organization.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The name of the organization suitable for display.
	// The display name to use for this organization.
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Identifier defined by client which identifies the organization on the client side
	// An optional external identifier for this organization.
	ExternalID *string `json:"externalId,omitempty" tf:"external_id,omitempty"`

	// The GUID of the organization
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Marks the Org as a root organization (boolean)
	// Deprecated, do not use.
	IsRootOrg *bool `json:"isRootOrg,omitempty" tf:"is_root_org,omitempty"`

	// The name of the Org in IAM
	// The name of the IAM Organization.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The parent Org ID (GUID)
	// The parent organization ID.
	ParentOrgID *string `json:"parentOrgId,omitempty" tf:"parent_org_id,omitempty"`

	// The type of the organization e.g. Hospital
	// The organization type.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Blocks until the organization delete has completed. Default: false.
	// The organization delete process can take some time as all its associated resources like
	// users, groups, roles etc. are removed recursively. This option is useful for ephemeral environments
	// where the same organization might be recreated shortly after a destroy operation.
	// Blocks until the organization delete has completed. Default: false. The organization delete process can take some time as all its associated resources like users, groups, roles etc. are removed recursively. This option is useful for ephemeral environments where the same organization might be recreated shortly after a destroy operation.
	WaitForDelete *bool `json:"waitForDelete,omitempty" tf:"wait_for_delete,omitempty"`
}

type OrganizationParameters struct {

	// The description of the Org
	// The description of the organization.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The name of the organization suitable for display.
	// The display name to use for this organization.
	// +kubebuilder:validation:Optional
	DisplayName *string `json:"displayName,omitempty" tf:"display_name,omitempty"`

	// Identifier defined by client which identifies the organization on the client side
	// An optional external identifier for this organization.
	// +kubebuilder:validation:Optional
	ExternalID *string `json:"externalId,omitempty" tf:"external_id,omitempty"`

	// Marks the Org as a root organization (boolean)
	// Deprecated, do not use.
	// +kubebuilder:validation:Optional
	IsRootOrg *bool `json:"isRootOrg,omitempty" tf:"is_root_org,omitempty"`

	// The name of the Org in IAM
	// The name of the IAM Organization.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The parent Org ID (GUID)
	// The parent organization ID.
	// +kubebuilder:validation:Optional
	ParentOrgID *string `json:"parentOrgId,omitempty" tf:"parent_org_id,omitempty"`

	// The type of the organization e.g. Hospital
	// The organization type.
	// +kubebuilder:validation:Optional
	Type *string `json:"type,omitempty" tf:"type,omitempty"`

	// Blocks until the organization delete has completed. Default: false.
	// The organization delete process can take some time as all its associated resources like
	// users, groups, roles etc. are removed recursively. This option is useful for ephemeral environments
	// where the same organization might be recreated shortly after a destroy operation.
	// Blocks until the organization delete has completed. Default: false. The organization delete process can take some time as all its associated resources like users, groups, roles etc. are removed recursively. This option is useful for ephemeral environments where the same organization might be recreated shortly after a destroy operation.
	// +kubebuilder:validation:Optional
	WaitForDelete *bool `json:"waitForDelete,omitempty" tf:"wait_for_delete,omitempty"`
}

// OrganizationSpec defines the desired state of Organization
type OrganizationSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     OrganizationParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider OrganizationInitParameters `json:"initProvider,omitempty"`
}

// OrganizationStatus defines the observed state of Organization.
type OrganizationStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        OrganizationObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Organization is the Schema for the Organizations API. Manages HSDP IAM Organization resources
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,hsdp}
type Organization struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   OrganizationSpec   `json:"spec"`
	Status OrganizationStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// OrganizationList contains a list of Organizations
type OrganizationList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Organization `json:"items"`
}

// Repository type metadata.
var (
	Organization_Kind             = "Organization"
	Organization_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Organization_Kind}.String()
	Organization_KindAPIVersion   = Organization_Kind + "." + CRDGroupVersion.String()
	Organization_GroupVersionKind = CRDGroupVersion.WithKind(Organization_Kind)
)

func init() {
	SchemeBuilder.Register(&Organization{}, &OrganizationList{})
}
