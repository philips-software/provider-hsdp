/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1alpha1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type GroupInitParameters struct {

	// The description of the group
	// The group description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The list of IAM device identity IDs to include in this group. See hsdp_iam_device
	// The list of IAM device identity IDs to include in this group.
	// +listType=set
	Devices []*string `json:"devices,omitempty" tf:"devices,omitempty"`

	// While most resources do automatic drift detection, we are opting to make this
	// opt-in for IAM Groups due to insufficient IAM API capabilities to perform this operation efficiently.
	// A future version might change this to be always-on.
	DriftDetection *bool `json:"driftDetection,omitempty" tf:"drift_detection,omitempty"`

	// The managing organization ID
	// The managing organization ID.
	// +crossplane:generate:reference:type=github.com/philips-software/provider-hsdp/apis/iam/v1alpha1.Organization
	// +crossplane:generate:reference:refFieldName=OrganizationRef
	ManagingOrganization *string `json:"managingOrganization,omitempty" tf:"managing_organization,omitempty"`

	// Selector for a Organization in iam to populate managingOrganization.
	// +kubebuilder:validation:Optional
	ManagingOrganizationSelector *v1.Selector `json:"managingOrganizationSelector,omitempty" tf:"-"`

	// The name of the group
	// The group name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Reference to a Organization in iam to populate managingOrganization.
	// +kubebuilder:validation:Optional
	OrganizationRef *v1.Reference `json:"organizationRef,omitempty" tf:"-"`

	// References to Role in iam to populate roles.
	// +kubebuilder:validation:Optional
	RoleRef []v1.Reference `json:"roleRef,omitempty" tf:"-"`

	// The list of role IDS to assign to this group
	// The list of role IDS to assign to this group.
	// +crossplane:generate:reference:type=github.com/philips-software/provider-hsdp/apis/iam/v1alpha1.Role
	// +crossplane:generate:reference:refFieldName=RoleRef
	// +listType=set
	Roles []*string `json:"roles,omitempty" tf:"roles,omitempty"`

	// Selector for a list of Role in iam to populate roles.
	// +kubebuilder:validation:Optional
	RolesSelector *v1.Selector `json:"rolesSelector,omitempty" tf:"-"`

	// References to Service in iam to populate services.
	// +kubebuilder:validation:Optional
	ServiceRef []v1.Reference `json:"serviceRef,omitempty" tf:"-"`

	// The list of service identity IDs to include in this group. See hsdp_iam_service
	// The list of service identity IDs to include in this group.
	// +crossplane:generate:reference:type=github.com/philips-software/provider-hsdp/apis/iam/v1alpha1.Service
	// +crossplane:generate:reference:refFieldName=ServiceRef
	// +listType=set
	Services []*string `json:"services,omitempty" tf:"services,omitempty"`

	// Selector for a list of Service in iam to populate services.
	// +kubebuilder:validation:Optional
	ServicesSelector *v1.Selector `json:"servicesSelector,omitempty" tf:"-"`

	// References to User in iam to populate users.
	// +kubebuilder:validation:Optional
	UserRef []v1.Reference `json:"userRef,omitempty" tf:"-"`

	// The list of user IDs to include in this group. The provider only manages this list of users. Existing users added by others means to the group by the provider. It is not practical to manage hundreds or thousands of users this way of course.
	// The list of user IDs to include in this group. The provider only manages this list of users. Existing users added by others means to the group by the provider. It is not practical to manage hundreds or thousands of users this way of course.
	// +crossplane:generate:reference:type=github.com/philips-software/provider-hsdp/apis/iam/v1alpha1.User
	// +crossplane:generate:reference:refFieldName=UserRef
	// +listType=set
	Users []*string `json:"users,omitempty" tf:"users,omitempty"`

	// Selector for a list of User in iam to populate users.
	// +kubebuilder:validation:Optional
	UsersSelector *v1.Selector `json:"usersSelector,omitempty" tf:"-"`
}

type GroupObservation struct {

	// The description of the group
	// The group description.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The list of IAM device identity IDs to include in this group. See hsdp_iam_device
	// The list of IAM device identity IDs to include in this group.
	// +listType=set
	Devices []*string `json:"devices,omitempty" tf:"devices,omitempty"`

	// While most resources do automatic drift detection, we are opting to make this
	// opt-in for IAM Groups due to insufficient IAM API capabilities to perform this operation efficiently.
	// A future version might change this to be always-on.
	DriftDetection *bool `json:"driftDetection,omitempty" tf:"drift_detection,omitempty"`

	// The GUID of the group
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// The managing organization ID
	// The managing organization ID.
	ManagingOrganization *string `json:"managingOrganization,omitempty" tf:"managing_organization,omitempty"`

	// The name of the group
	// The group name.
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// The list of role IDS to assign to this group
	// The list of role IDS to assign to this group.
	// +listType=set
	Roles []*string `json:"roles,omitempty" tf:"roles,omitempty"`

	// The list of service identity IDs to include in this group. See hsdp_iam_service
	// The list of service identity IDs to include in this group.
	// +listType=set
	Services []*string `json:"services,omitempty" tf:"services,omitempty"`

	// The list of user IDs to include in this group. The provider only manages this list of users. Existing users added by others means to the group by the provider. It is not practical to manage hundreds or thousands of users this way of course.
	// The list of user IDs to include in this group. The provider only manages this list of users. Existing users added by others means to the group by the provider. It is not practical to manage hundreds or thousands of users this way of course.
	// +listType=set
	Users []*string `json:"users,omitempty" tf:"users,omitempty"`
}

type GroupParameters struct {

	// The description of the group
	// The group description.
	// +kubebuilder:validation:Optional
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// The list of IAM device identity IDs to include in this group. See hsdp_iam_device
	// The list of IAM device identity IDs to include in this group.
	// +kubebuilder:validation:Optional
	// +listType=set
	Devices []*string `json:"devices,omitempty" tf:"devices,omitempty"`

	// While most resources do automatic drift detection, we are opting to make this
	// opt-in for IAM Groups due to insufficient IAM API capabilities to perform this operation efficiently.
	// A future version might change this to be always-on.
	// +kubebuilder:validation:Optional
	DriftDetection *bool `json:"driftDetection,omitempty" tf:"drift_detection,omitempty"`

	// The managing organization ID
	// The managing organization ID.
	// +crossplane:generate:reference:type=github.com/philips-software/provider-hsdp/apis/iam/v1alpha1.Organization
	// +crossplane:generate:reference:refFieldName=OrganizationRef
	// +kubebuilder:validation:Optional
	ManagingOrganization *string `json:"managingOrganization,omitempty" tf:"managing_organization,omitempty"`

	// Selector for a Organization in iam to populate managingOrganization.
	// +kubebuilder:validation:Optional
	ManagingOrganizationSelector *v1.Selector `json:"managingOrganizationSelector,omitempty" tf:"-"`

	// The name of the group
	// The group name.
	// +kubebuilder:validation:Optional
	Name *string `json:"name,omitempty" tf:"name,omitempty"`

	// Reference to a Organization in iam to populate managingOrganization.
	// +kubebuilder:validation:Optional
	OrganizationRef *v1.Reference `json:"organizationRef,omitempty" tf:"-"`

	// References to Role in iam to populate roles.
	// +kubebuilder:validation:Optional
	RoleRef []v1.Reference `json:"roleRef,omitempty" tf:"-"`

	// The list of role IDS to assign to this group
	// The list of role IDS to assign to this group.
	// +crossplane:generate:reference:type=github.com/philips-software/provider-hsdp/apis/iam/v1alpha1.Role
	// +crossplane:generate:reference:refFieldName=RoleRef
	// +kubebuilder:validation:Optional
	// +listType=set
	Roles []*string `json:"roles,omitempty" tf:"roles,omitempty"`

	// Selector for a list of Role in iam to populate roles.
	// +kubebuilder:validation:Optional
	RolesSelector *v1.Selector `json:"rolesSelector,omitempty" tf:"-"`

	// References to Service in iam to populate services.
	// +kubebuilder:validation:Optional
	ServiceRef []v1.Reference `json:"serviceRef,omitempty" tf:"-"`

	// The list of service identity IDs to include in this group. See hsdp_iam_service
	// The list of service identity IDs to include in this group.
	// +crossplane:generate:reference:type=github.com/philips-software/provider-hsdp/apis/iam/v1alpha1.Service
	// +crossplane:generate:reference:refFieldName=ServiceRef
	// +kubebuilder:validation:Optional
	// +listType=set
	Services []*string `json:"services,omitempty" tf:"services,omitempty"`

	// Selector for a list of Service in iam to populate services.
	// +kubebuilder:validation:Optional
	ServicesSelector *v1.Selector `json:"servicesSelector,omitempty" tf:"-"`

	// References to User in iam to populate users.
	// +kubebuilder:validation:Optional
	UserRef []v1.Reference `json:"userRef,omitempty" tf:"-"`

	// The list of user IDs to include in this group. The provider only manages this list of users. Existing users added by others means to the group by the provider. It is not practical to manage hundreds or thousands of users this way of course.
	// The list of user IDs to include in this group. The provider only manages this list of users. Existing users added by others means to the group by the provider. It is not practical to manage hundreds or thousands of users this way of course.
	// +crossplane:generate:reference:type=github.com/philips-software/provider-hsdp/apis/iam/v1alpha1.User
	// +crossplane:generate:reference:refFieldName=UserRef
	// +kubebuilder:validation:Optional
	// +listType=set
	Users []*string `json:"users,omitempty" tf:"users,omitempty"`

	// Selector for a list of User in iam to populate users.
	// +kubebuilder:validation:Optional
	UsersSelector *v1.Selector `json:"usersSelector,omitempty" tf:"-"`
}

// GroupSpec defines the desired state of Group
type GroupSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     GroupParameters `json:"forProvider"`
	// THIS IS A BETA FIELD. It will be honored
	// unless the Management Policies feature flag is disabled.
	// InitProvider holds the same fields as ForProvider, with the exception
	// of Identifier and other resource reference fields. The fields that are
	// in InitProvider are merged into ForProvider when the resource is created.
	// The same fields are also added to the terraform ignore_changes hook, to
	// avoid updating them after creation. This is useful for fields that are
	// required on creation, but we do not desire to update them after creation,
	// for example because of an external controller is managing them, like an
	// autoscaler.
	InitProvider GroupInitParameters `json:"initProvider,omitempty"`
}

// GroupStatus defines the observed state of Group.
type GroupStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        GroupObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
// +kubebuilder:storageversion

// Group is the Schema for the Groups API. Manages HSDP IAM Group resources
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,hsdp}
type Group struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	// +kubebuilder:validation:XValidation:rule="!('*' in self.managementPolicies || 'Create' in self.managementPolicies || 'Update' in self.managementPolicies) || has(self.forProvider.name) || (has(self.initProvider) && has(self.initProvider.name))",message="spec.forProvider.name is a required parameter"
	Spec   GroupSpec   `json:"spec"`
	Status GroupStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// GroupList contains a list of Groups
type GroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []Group `json:"items"`
}

// Repository type metadata.
var (
	Group_Kind             = "Group"
	Group_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: Group_Kind}.String()
	Group_KindAPIVersion   = Group_Kind + "." + CRDGroupVersion.String()
	Group_GroupVersionKind = CRDGroupVersion.WithKind(Group_Kind)
)

func init() {
	SchemeBuilder.Register(&Group{}, &GroupList{})
}
